@page "/register"
@inject UserService UserService
@inject AuthService AuthService
@inject NavigationManager Navigation
@using BicyleApp.Data.ViewModels
@using BicyleApp.Data.Models
@using System.ComponentModel.DataAnnotations
@using static BicyleApp.Data.Enums.Enum

<h3>Register</h3>

<EditForm Model="registerModel" OnValidSubmit="RegisterAsync">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Email</label>
        <InputText class="form-control" @bind-Value="registerModel.Email" />
    </div>

    <div class="form-group">
        <label>Password</label>
        <InputText type="password" class="form-control" @bind-Value="registerModel.Password" />
    </div>

    <div class="form-group">
        <label>Confirm Password</label>
        <InputText type="password" class="form-control" @bind-Value="registerModel.ConfirmPassword" />
    </div>

    <div class="form-group">
        <label>Name</label>
        <InputText class="form-control" @bind-Value="registerModel.Name" />
    </div>

    <div class="form-group">
        <label>City</label>
        <InputText class="form-control" @bind-Value="registerModel.City" />
    </div>

    <button class="btn btn-primary mt-2">Register</button>

    @if (!string.IsNullOrWhiteSpace(message))
    {
        <p class="alert alert-info mt-2">@message</p>
    }
</EditForm>

@code {
    private RegisterViewModel registerModel = new();
    private string message = string.Empty;

    private async Task RegisterAsync()
    {
        if (await UserService.GetByEmailAsync(registerModel.Email) != null)
        {
            message = "User already exists.";
            return;
        }

        var user = new User
            {
                Email = registerModel.Email,
                Name = registerModel.Name,
                City = registerModel.City,
                Role = registerModel.Role,
                PasswordHash = AuthService.HashPassword(registerModel.Password)
            };

        await UserService.AddAsync(user);
        message = "Registration successful. You can now log in.";
        await Task.Delay(1500);
        Navigation.NavigateTo("/login");
    }
}
